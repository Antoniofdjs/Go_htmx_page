package templates

import(
    "Go_servers/models"
    "fmt"
)

/*
Base layout for the editor view
*/
templ EditorSection(works []models.WorkFrontEnd) {
     <section class="px-0 dark:bg-gray-800 dark:text-gray-900 justify-between w-screen" id="works-section">
      <!-- images outer container -->
      <div class="mx-auto px-0 flex flex-col items-center justify-between w-screen overflow-hidden">
        <div class="-m-1 flex flex-wrap md:-m-2 flex-col items-center w-screen md:gap-1 gap-3" id="gallery">
          <!-- IMAGES HERE BELOW: -->
          for _, work := range works{
            <div class="flex w-full h-[500px] flex-wrap pb-10 object-center relative" id="work-container-{{ .Position }}">
                <img
                alt="gallery"
                class="block w-full h-full object-cover object-center absolute top-0 left-0"
                src={ work.Path }
                />
                <!-- Image text container -->
                <div class="w-full h-full hover:opacity-100 absolute top-0 left-0 flex items-center">
                <div class="bg-black bg-opacity-50 w-full h-full flex flex-col items-baseline">
                <h2 class="text-white md:pl-2 w-full text-left mt-2 font-serif text-xl">{ work.Title }</h2>
                @ButtonsContainer(work)
              </div>
            </div>
          </div>
          }
        </div>
      </div>
    </section>
}

/* Container for all buttons visible on the editor view.
These include 'Edit Title', 'Change Picture', 'Delete', 'Insert Work Above', 'Insert Work Below'.
To call these buttons use @EditorButton()
}
*/ 
templ ButtonsContainer(work models.WorkFrontEnd) {
    <div
        class="w-1/2 md:w-2/12 flex flex-col gap-y-2 ml-3 bg-gradient-to-r from-blue-300 to-gray-200 rounded-lg overflow-hidden shadow-gray-700 shadow-md"
        id={ templ.JoinStringErrs("buttons-container-" + work.Position) }
    >
        @EditorButton("ChangePic", work)
        @EditorButton("EditTitle", work)
        @EditorButton("Delete", work)
        @EditorButton("InsertAbove", work)
        @EditorButton("InsertBelow", work)
    </div>
}


// Text for button based on component called
func TextForButton(component string) string{
  ComponentsButtonText := map[string]string{
  "ChangePic" : "Change Picture",
  "EditTitle" : "Edit Title",
  "Delete": "Delete",
  "InsertAbove": "Insert Work Above",
  "InsertBelow": "Insert Work Below",
}
return ComponentsButtonText[component]
}

/*
Individual buttons of the container for the editor mode. Pass into it the component name and work data.
Example if you need the delete button: @EditorButton("Delete", work)
The button will have the correct redirects and hx-vals and methods to call in backend.
*/ 
templ EditorButton(component string, work models.WorkFrontEnd) {
    <button
        type="button"
        class="h-14 bg-blue-100 hover:bg-blue-300 text-gray-700 font-bold py-2 px-4"
        hx-get="/editor/components"
        hx-target={ templ.JoinStringErrs("#buttons-container-" + work.Position) }
        hx-swap="outerHTML"
        if component == "EditTitle"{
        hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "%s", "Title": "%s", "Description": "%s"}`, work.Position, component, work.Title, work.Description) }
        }else{
        hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "%s", "Title": "%s"}`, work.Position, component, work.Title) }
        }
        >
        { TextForButton(component) }
      </button>
}

templ EditTitleView(work models.WorkFrontEnd) {
  <div
  class="flex flex-col h-1/2 w-11/12 mx-4 md:w-1/2 p-6 rounded-lg shadow-md bg-white dark:text-gray-800 md:items-start text-left justify-start"
  id={ templ.JoinStringErrs("edit-title-component-" + work.Position) }
>
  <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
    <!-- The button is for closing this component and retreiving the previous one -->
    <button
      type="button"
      class="flex w-6 h-6 p-1 bg-transparent border-none outline-none cursor-pointer hover:bg-gray-200 justify-center items-center text-center"
      aria-label="Close"
      hx-headers='{"Content-Type": "application/json"}'
      hx-get="/editor/components"
      hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "ButtonsEditor", "Title": "%s", "Description": "%s"}`, work.Position, work.Title, work.Description) }
      hx-target={ templ.JoinStringErrs("#edit-title-component-" + work.Position) } 
      hx-swap="outerHTML"
    >
      <!-- Add button text or icon here if needed -->
      <span class="text-red-700 hover:text-red-600">X</span>
      <!-- You can style this text as needed -->
    </button>
    EDIT TITLE:
  </h2>
  <div class="flex flex-col justify-start gap-3 mt-0 sm:flex-row items-start w-full h-full text-left">
    <form
      class="flex flex-row flex-wrap justify-start mt-6 items-center w-full h-5/6 text-left"
      hx-put="/editor"
      hx-target="#works-section"
      hx-include="[name='inputTitle'], [name='Position'], [name='inputDescription']"
      hx-swap="outerHTML"
    >
      <input
        class="px-6 py-2 rounded-md w-full text-center border border-gray-700 bg-blue-50 text-black"
        placeholder={ work.Title }
        value={ work.Title }
        name="inputTitle"
        required="true"
      />
      <input type="hidden" name="Position" value={ work.Position } />
      <textarea
        class="px-7 py-2 rounded-md md:w-1/2 w-full h-5/6 align-text-top items-start justify-start border border-gray-700 bg-blue-50 text-black flex-1 resize-none"
        placeholder="Enter your description here"
        name="inputDescription"
        required="true"
      >{ work.Description }</textarea>

      <button
        type="submit"
        class="py-1 rounded-md md:w-1/6 w-1/4 bg-green-500 text-center hover:bg-green-900 border border-green-950"
      >
        Submit
      </button>
    </form>
  </div>
</div>
}

templ DeleteView(work models.WorkFrontEnd) {
  <div
  class="flex flex-col h-1/3 w-11/12 mx-4 md:w-1/2 gap-2 p-6 rounded-lg shadow-md bg-white dark:text-gray-800 md:items-start text-left justify-center"
  id={ templ.JoinStringErrs("delete-work-component-" + work.Position) }
>
  <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
    <!-- The button is for closing this component and retreiving the previous one -->
    <button
      type="button"
      class="flex w-6 h-6 p-1 bg-transparent border-none outline-none cursor-pointer hover:bg-gray-200 justify-center items-center text-center"
      aria-label="Close"
      hx-headers='{"Content-Type": "application/json"}'
      hx-get="/editor/components"
      hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "ButtonsEditor", "Title": "%s", "Description": "%s"}`, work.Position, work.Title, work.Description) }
      hx-target={ templ.JoinStringErrs("#delete-work-component-" + work.Position) } 
      hx-swap="outerHTML"
    >
      <!-- Add button text or icon here if needed -->
      <span class="text-red-500 hover:text-red-600">X</span>
      <!-- You can style this text as needed -->
    </button>
    DELETE WORK: { work.Title }
  </h2>
  <div class="flex flex-col justify-between t md:gap-3 mt-6 sm:flex-row items-center w-full text-left">
    <p class="px-6 py-2 rounded-md md:w-1/2 w-full text-center">---WARNING---</p>
    <button
      id="delete-button"
      type="submit"
      class="py-1 rounded-md md:w-1/6 w-1/4 bg-red-500 text-center hover:bg-red-800 border border-red-900"
      hx-post="/editor/del"
      hx-target="#works-section"
      hx-swap="outerHTML"
      hx-vals={ fmt.Sprintf(`{"Position": "%s"}`, work.Position) }
    >
      DELETE
    </button>
  </div>
</div>
}

templ ButtonView(operation string, work models.WorkFrontEnd) {
  <div
  class="flex flex-col h-full md:h-2/3 w-11/12 mx-4 md:w-1/2 gap-2 p-6 rounded-lg shadow-md bg-blue-50 dark:text-gray-800 md:items-start text-left justify-start mb-2"
  id={ templ.JoinStringErrs("work-above-component-" + work.Position) }
>
  <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
    <!-- The button is for closing this component and retreiving the previous one -->
    <button
      type="button"
      class="flex w-6 h-6 p-1 bg-blue-50 border-none outline-none cursor-pointer hover:bg-blue-200 justify-center items-center text-center"
      aria-label="Close"
      hx-headers='{"Content-Type": "application/json"}'
      hx-get="/editor/components"
      hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "ButtonsEditor", "Title": "%s", "Description": "%s"}`, work.Position, work.Title, work.Description) }
      hx-target={ templ.JoinStringErrs("#work-above-component-" + work.Position) } 
      hx-swap="outerHTML"
    >
      <span class="text-red-500 hover:text-red-600">X</span>
    </button>
    { TextForButton(operation) }: { work.Title }
  </h2>
   <div
    class="flex md:flex-row flex-col justify-center items-center text-left bg-blue-50 h-full w-full rounded-md"
  >
    <form
      id="form-container"
      class="flex md:flex-row flex-col justify-center text-left bg-blue-50 h-full md:h-full w-full gap-4"
      hx-post="/editor"
      hx-encoding="multipart/form-data"
      hx-trigger="submit"
    >
      <!-- Title input -->
       <div
        class="flex md:flex-col flex-col justify-end gap-2 items-center bg-blue-50 h-full w-full rounded-md md:h-full flex"
      >
        <div class="flex justify-center items-center border border-blue-100 w-full h-1/4 md:h-1/3 md:h-1/5 sm:text-sm md:text-lg rounded-lg dark:text-gray-800 bg-blue-50 text-center shadow-sm shadow-slate-500">
        <input
          type="text"
          id="title"
          placeholder="Title"
          required="true"
          class="w-full h-full sm:text-sm md:text-lg rounded-lg dark:text-gray-800 bg-blue-50 text-center hover:bg-blue-200 hover:shadow-md"
        />
         </div>
         <div class="rounded-md md:w-full  border border-blue-100 w-full h-5/6 md:h-4/5 align-text-top items-start justify-start bg-blue-50 text-black flex-1 resize-none shadow-sm shadow-slate-500">
        <textarea
        class="rounded-md md:w-full w-full h-full align-text-top items-start justify-start bg-blue-50 text-black resize-none pl-1 hover:shadow-md hover:bg-blue-200"
        placeholder="Enter work description here"
        name="inputDescription"
        required="true">
        { work.Description }
        </textarea>
        </div>
      </div>
      <!-- /Title Input -->
      <!-- File upload  -->
      <div
        class="flex md:flex-col flex-col justify-start gap-3 md:gap-2 items-center bg-blue-50 h-full w-full rounded-md md:h-full"
        >
        <div class="flex justify-center items-center w-full h-1/4 md:h-1/5 sm:text-sm md:text-lg rounded-lg  bg-blue-200 shadow-sm shadow-slate-500 border border-slate-500">
          <p class="flex justify-center items-center h-full w-full text-center text-black font-medium">
            Choose an image file below:
          </p>
        </div>
         <div class="flex flex-col gap-3 md:gap-2 rounded-md md:w-full w-full h-3/4 md:h-2/3 align-text-top items-end justify-end text-black flex-1">
            <input
            class="text-center items-center justify-center w-full h-4/5 md:h-2/3 flex text-black rounded-lg bg-blue-50 pt-2 pl-2 shadow-sm shadow-slate-500 cursor-pointer hover:bg-blue-200 border border-blue-100"
            type="file"
            id="picture"
            name="picture"
            accept="image/*"
            required="true"
            />
            <div class=" flex items-end justify-center w-1/2 md:w-1/3 h-1/2 md:h-1/3 ">
            <button
            type="submit"
            class="md:font-semibold bg-emerald-400 hover:bg-emerald-500 dark:text-gray-100 w-full h-full md:h-3/4  rounded-xl shadow-md shadow-slate-500"
            >
            Submit
            </button>
            </div>
          </div>
      </div>
      <!-- /File upload -->
    </form>
  </div>
</div>
}

      // <!-- Pic upload and submit -->
      // <div
      //   class="flex md:flex-col flex-col justify-start text-center gap-2 bg-white overflow-hidden h-full w-full rounded-md"
      // >
      //   <!--upload file  -->
      //   <div class="w-full h-1/5 justify-start items-center flex flex-col bg-gray-800 rounded-lg border border-black">
      //     <input
      //       class="text-center items-center justify-center w-full h-full flex text-yellow-200 bg-gray-800 rounded-lg"
      //       type="file"
      //       id="picture"
      //       name="picture"
      //       accept="image/*"
      //       required="true"
      //     />
      //   </div>
      //   <!-- /upload file -->
      //   <!-- Submit -->
      //   <div class=" w-full md:w-full h-full md:h-5/6 justify-end items-center flex flex-col">
      //   <div class="w-full h-full justify-start items-end flex flex-col rounded-lg">
          // <input
          //   class="text-start items-center justify-center w-full h-5/6 flex text-yellow-200 bg-gray-800 rounded-lg"
          //   type="file"
          //   id="picture"
          //   name="picture"
          //   accept="image/*"
          //   required="true"
          // />
          // <button
          //   type="submit"
          //   class="md:font-semibold bg-amber-400 hover:bg-amber-800 dark:text-gray-100 w-1/2 md:w-1/3 h-1/2 md:h-1/3 md:border md:border-amber-600 md:rounded-md"
          // >
          //   Submit
          // </button>
      //   </div>
      //   </div>
      //   <!-- / Submit -->
      // </div>
      // <!-- Pic upload and submit -->
templ InsertBelowView(work models.WorkFrontEnd) {
  <div
  class="flex flex-col h-full md:h-2/3 w-11/12 mx-4 md:w-1/2 gap-2 p-6 rounded-lg shadow-md bg-white dark:text-gray-800 md:items-start text-left justify-start"
  id={ templ.JoinStringErrs("work-above-component-" + work.Position) }
>
  <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
    <!-- The button is for closing this component and retreiving the previous one -->
    <button
      type="button"
      class="flex w-6 h-6 p-1 bg-transparent border-none outline-none cursor-pointer hover:bg-gray-200 justify-center items-center text-center"
      aria-label="Close"
      hx-headers='{"Content-Type": "application/json"}'
      hx-get="/editor/components"
      hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "ButtonsEditor", "Title": "%s", "Description": "%s"}`, work.Position, work.Title, work.Description) }
      hx-target={ templ.JoinStringErrs("#work-above-component-" + work.Position) } 
      hx-swap="outerHTML"
    >
      <!-- Add button text or icon here if needed -->
      <span class="text-red-500 hover:text-red-600">X</span>
      <!-- You can style this text as needed -->
    </button>
    Insert Work Below: { work.Title }
  </h2>
  <div
    class="flex md:flex-row flex-col justify-center items-center text-left bg-white overflow-hidden h-full w-full rounded-md"
  >
    <form
      id="form-container"
      class="flex md:flex-row flex-col justify-center text-left bg-white overflow-hidden h-5/6 w-full md:w-11/12 gap-4"
      hx-post="/editor"
      hx-encoding="multipart/form-data"
      hx-trigger="submit"
      hx-target="#works-section"
      hx-include="[name='title'], [name='Position']"
      hx-swap="outerHTML"
    >
      <!-- Title input -->
      <div
        class="flex md:flex-col flex-col justify-center items-center bg-white overflow-hidden h-full w-full rounded-md md:h-full"
      >
        <input
          type="text"
          id="title"
          name="title"
          placeholder="Title"
          class="border w-11/12 h-1/3 md:h-1/5 sm:text-sm md:text-lg rounded-lg border-black dark:text-gray-800 bg-blue-50 text-center"
        />
      </div>
      <!-- /Title Input -->
      <!-- Hidden Position input -->
      <input type="hidden" name="Position" value="{{ .BelowPosition }}" />

      <!-- Pic upload and submit -->
      <div
        class="flex md:flex-col flex-col justify-center text-center bg-white overflow-hidden h-full w-full rounded-md border border-gray-800"
      >
        <!--upload file  -->
        <div class="bg-gray-800 w-full h-full justify-center items-center flex flex-col">
          <input
            class="text-center items-center justify-center w-full h-full md:w-2/3 md:h-1/3 flex text-yellow-200"
            type="file"
            id="picture"
            name="picture"
            accept="image/*"
            required
          />
        </div>
        <!-- /upload file -->
        <!-- Submit -->
        <div class="bg-white w-full md:w-full h-full justify-center items-center flex flex-col">
          <button
            type="submit"
            class="px-8 py-3 md:font-semibold bg-green-500 hover:bg-green-800 dark:text-gray-100 w-full md:w-1/2 h-full md:h-1/2 md:border md:border-green-900 md:rounded-md"
          >
            Submit
          </button>
        </div>
        <!-- / Submit -->
      </div>
      <!-- Pic upload and submit -->
    </form>
  </div>
</div>
}

templ ChangePicView(work models.WorkFrontEnd) {
  <div
  class="flex flex-col h-5/6 md:h-2/3 w-11/12 mx-4 md:w-1/2 gap-2 p-6 rounded-lg shadow-md bg-white dark:text-gray-800 md:items-start text-left justify-start"
  id={ templ.JoinStringErrs("change-picture-component-" + work.Position) }
>
  <h2 class="flex items-center gap-2 text-xl font-semibold leading-tight tracking-wide">
    <!-- The button is for closing this component and retreiving the previous one -->
    <button
      type="button"
      class="flex w-6 h-6 p-1 bg-transparent border-none outline-none cursor-pointer hover:bg-gray-200 justify-center items-center text-center"
      aria-label="Close"
      hx-headers='{"Content-Type": "application/json"}'
      hx-get="/editor/components"
      hx-vals={ fmt.Sprintf(`{"Position": "%s", "Component": "ButtonsEditor", "Title": "%s", "Description": "%s"}`, work.Position, work.Title, work.Description) }
      hx-target={ templ.JoinStringErrs("#change-picture-component-" + work.Position) } 
      hx-swap="outerHTML"
    >
      <!-- Add button text or icon here if needed -->
      <span class="text-red-500 hover:text-red-600">X</span>
      <!-- You can style this text as needed -->
    </button>
    Change Picture: { work.Title }
  </h2>
   <div
    class="flex md:flex-row flex-col justify-center items-center text-left bg-white overflow-hidden h-full w-full rounded-md"
  >
    <form
      id="form-container"
      class="flex md:flex-row flex-col justify-center text-left bg-white overflow-hidden h-5/6 w-full md:w-11/12 gap-4"
      hx-post="/upload"
      hx-encoding="multipart/form-data"
      hx-trigger="submit"
      hx-target="#result"
    >
      <!-- Pic upload and submit -->
      <div
        class="flex md:flex-col flex-col justify-center text-center bg-white overflow-hidden h-full w-full rounded-md border border-gray-800"
      >
        <!--upload file  -->
        <div class="bg-gray-800 w-full h-1/2 justify-center items-center flex flex-col">
          <input
            class="text-center items-center justify-center w-full h-full md:w-2/3 md:h-1/3 flex text-yellow-200"
            type="file"
            id="picture"
            name="picture"
            accept="image/*"
            required
          />
        </div>
        <!-- /upload file -->
        <!-- Submit -->
        <div class="bg-white w-full md:w-full h-1/2 justify-center items-center flex flex-col">
          <button
            type="submit"
            class="px-8 py-3 md:font-semibold bg-green-500 hover:bg-green-800 dark:text-gray-100 w-full md:w-1/2 h-full md:h-1/2 md:border md:border-green-900 md:rounded-md"
          >
            Submit
          </button>
        </div>
        <!-- / Submit -->
      </div>
      <!-- Pic upload and submit -->
    </form>
  </div>
</div>
}

