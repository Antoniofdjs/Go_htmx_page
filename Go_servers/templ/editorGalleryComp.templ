package templates

import (
    "fmt"
    "Go_servers/models"
    )

templ GalleryEditor(work models.WorkFrontEnd, galleryItems []models.GalleryItemFrontEnd) {
<section class="px-0 dark:bg-gray-800 dark:text-gray-900 justify-center w-screen h-auto items-center flex flex-col pb-4" id="gallery-section">
    <!-- Work Container  -->
    <div class="flex flex-col dark:bg-gray-50 dark:text-gray-800 justify-center items-center w-full h-600 text-left">
        <!-- Cover Picture Container  -->
        <div class="h-full w-full flex" id="cover-image-container">
            <img
            src={ work.Path }
            alt=""
            class="object-cover h-full w-full rounded-sm dark:bg-gray-500 aspect-video"
            id="cover-image"
            loading="lazy"
            />
        </div>
    </div>
    <!-- / Work Container -->

    <!-- Work Info Container -->
        <div id="work-info-container" class="w-full h-1/4 md:justify-center justify-center flex flex-col text-left md:text-center md:items-center py-12">
            <h2 id="work-title" class="text-xl md:text-3xl font-semibold text-center">{ work.Title }</h2>
            <span class="block md:pb-1 md:pt-2 pb-4 text-sm dark:text-gray-600 font-thin text-center">07/26/2024</span>
            <div class="md:w-3/5 w-full font-serif text-lg h-auto flex justify-center items-center">
                <p id="work-description" class="md:w-full w-3/4 font-serif text-lg h-auto text-center">
                { work.Description }
                </p>
            </div>    
        </div>
    <!-- / Work Info Container -->

    <!-- Gallery Container -->
    <div class="px-0 dark:bg-gray-800 dark:text-gray-900 justify-center items-start flex pb-4 w-full h-auto" id="gallery-container">

        <!-- Gallery Grid -->
        <div class=" flex h-auto grid md:grid-cols-3 auto-cols-max grid-cols-2 w-11/12 md:gap-3 gap-1" id="gallery-grid">
            for _, item := range galleryItems{
                <div class="w-full md:h-96 h-80 flex relative" id={templ.JoinStringErrs("image-container-"+ item.Position)}>
                    <img
                        class="w-full h-full object-cover"
                        src={ item.Path }
                        alt=""
                        loading="lazy"
                        id="my-pic"
                    />
                    <button
                    type="button"
                    id="delete-pic"
                    class="absolute bottom-2 right-2 h-10 w-10 bg-stone-200 text-black px-1 py-1 justify-center items-center flex rounded-md shadow  shadow-md shadow-slate-900 hover:bg-red-400 hover:shadow-none transition duration-150 ease-in-out"
                    hx-get="/editor/update"
                    hx-target={ templ.JoinStringErrs("#image-container-" + item.Position) }
                    hx-swap="innerHTML transition:true"
                    hx-vals={ fmt.Sprintf(`{"Opacity": "true", "PicUrl": "%s", "Position": "%s", "WorkTitle": "%s"}`, item.Path, item.Position, work.Title)}
                    >
                        <img src="../static/images/trash-icon.png" alt="Delete" class="h-full w-full object-contain" id="logo"/>
                    </button>
                </div>
            }
            // Upload more pics div
            <div class="w-full md:h-96 h-80 rounded-lg flex justify-end items-center flex-col overflow-hidden bg-gradient-to-t from-yellow-50 via-amber-100 to-yellow-50" id="file-upload-container">
                <form  hx-post="/editor/gallery" 
                hx-trigger="change from:#upload-pics" 
                hx-target="#files-list" 
                hx-swap="innerHTML"
                hx-include="#upload-pics, #title-input"
                enctype="multipart/form-data"
                class="h-1/3 md:h-1/2 w-full flex flex-col justify-center items-center"
                id="form"
                >
                    <input type="hidden" name="Title" value={ work.Title } id="title-input">
                    <label for="upload-pics" class="flex hover:opacity-70 hover:cursor-pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 31" class="w-20 w-20 md:h-28 md:w-28 fill-current text-amber-500 bg-gradient-to-t bg-yellow-50 hover:from-amber-200 hover:to-amber-100 rounded-lg shadow shadow-lg shadow-amber-800 hover:text-amber-500 hover:shadow-none transition duration-150 ease-in-out" style="fill-rule: evenodd;">
                            <path d="m30 19.59-4.29-4.29a1 1 0 0 0-1.41 0L19 20.59l-6.29-6.29a1 1 0 0 0-1.41 0L2 23.59V3a1 1 0 0 1 1-1h18V0H3a3 3 0 0 0-3 3v26a3 3 0 0 0 3 3h26a3 3 0 0 0 3-3V12h-2z"/>
                            <path d="M10 8a4 4 0 1 0 4-4 4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2 2 2 0 0 1 2 2zM28 4V0h-2v4h-4v2h4v4h2V6h4V4h-4z"/>
                        </svg>
                        <input type="file" name="Pictures" id="upload-pics" multiple class="hidden" accept="image/*">
                    </label>
                </form>
                <div class="w-full h-1/3 flex flex-col gap-3 items-center text-ellipsis" id="files-list"></div>
            </div>
        </div>
    <!-- /Gallery Grid -->
    </div>
    <!-- /Gallery Container -->
</section>
 <!-- /sticky footer -->
<div class="flex w-full sticky bottom-0 left-0 justify-center items-center py-2">
    <button
    class="w-auto h-auto bg-btnPrimary hover:bg-hoverBtnPrimary text-btnPrimaryText border border-2 border-gray-800 px-2 py-1 mr-2 rounded-lg shadow shadow-slate-700 shadow-md hover:shadow-none transition duration-150 ease-in-out" 
    id="save-button"
    type="submit"
    hx-target="#files-list"
    hx-swap="innerHTML"
    hx-put={ templ.JoinStringErrs("/editor/" + work.Title) }
    >Save changes</button>
</div>
}

/* Update pics that will be deleted, visually and load content fro teh requests */ 
templ UpdatePicStatus(opacity string, picUrl string, position string, workTitle string) {
    <img
    class="w-full h-full object-cover"
    src={ picUrl }
    alt=""
    loading="lazy"
    id="my-pic"
    if opacity == "true"{
    style="opacity: 0.50; filter: blur(2px)"
    }
    />
    <button type="button" id="delete-pic" hx-get="/editor/update" hx-swap="innerHTML transition:true"
    if opacity == "false"{
    class="absolute bottom-2 right-2 h-10 w-10 bg-stone-200 text-black px-1 py-1 justify-center items-center flex rounded-md shadow  shadow-md shadow-slate-900 hover:bg-red-300 hover:shadow-none transition duration-150 ease-in-out"
    }
    if opacity == "true"{
    class="absolute bottom-2 right-2 h-10 w-10 bg-amber-200 text-black px-1 py-1 justify-center items-center flex rounded-md shadow  shadow-md shadow-slate-900 hover:bg-emerald-300 hover:shadow-none transition duration-150 ease-in-out"
    }
    hx-target={ templ.JoinStringErrs("#image-container-"+ position) }
    if opacity == "true"{
    hx-vals={ fmt.Sprintf(`{"Opacity": "false", "PicUrl": "%s", "Position": "%s", "WorkTitle": "%s"}`,picUrl, position, workTitle)}
    }
    if opacity == "false"{
    hx-vals={ fmt.Sprintf(`{"Opacity": "true", "PicUrl": "%s", "Position": "%s", "WorkTitle": "%s"}`,picUrl, position, workTitle)}
    }
    >
        if opacity == "true"{
        <img src="../static/images/undo-symboll.png" alt="Delete" class="h-full w-full object-contain"/>
        }
        if opacity == "false"{
        <img src="../static/images/trash-icon.png" alt="Delete" class="h-full w-full object-contain"/>
        }
    </button>
}

/* List the files seclecte to be uploaded */ 
templ FilesSelectedContainer(fileNames []string, workTitle string) {
    <ul class="w-10/12 h-auto overflow-y-auto overflow-x-hidden items-center flex flex-col gap-1 border border border-slate-400 rounded-lg mt-2 text-ellipsis">
        for _,fileName := range fileNames{
            <li class="w-10/12 px-2 text-gray-600 text-ellipsis">
            { fileName }
            </li>
        }
    </ul>
    <div class="w-10/12 h-1/4 flex justify-end items-center pb-2">
    <button
    class="w-10 h-10 mr-2 rounded-full flex justify-center items-center border border-1 border-emerald-400 overflow-hidden"
    hx-post={ templ.JoinStringErrs("/editor/" + workTitle) }
    hx-include="#form"
    id="upload-pics"
    >
        <svg  class="w-20 h-20 fill-current text-emerald-500 hover:bg-emerald-300 transition duration-75 hover:ease-out hover:" fill="#247b30" height="90px" width="90px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-115.98 -115.98 606.08 606.08" xml:space="preserve" stroke="#247b49" stroke-width="0.0037411600000000003" transform="matrix(-1, 0, 0, 1, 0, 0)">
            <g id="SVGRepo_bgCarrier" stroke-width="0">
            </g>
            <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
            <g id="SVGRepo_iconCarrier">
                <g>
                    <path d="M344.058,207.506c-16.568,0-30,13.432-30,30v76.609h-254v-76.609c0-16.568-13.432-30-30-30c-16.568,0-30,13.432-30,30 v106.609c0,16.568,13.432,30,30,30h314c16.568,0,30-13.432,30-30V237.506C374.058,220.938,360.626,207.506,344.058,207.506z"></path>
                    <path d="M123.57,135.915l33.488-33.488v111.775c0,16.568,13.432,30,30,30c16.568,0,30-13.432,30-30V102.426l33.488,33.488 c5.857,5.858,13.535,8.787,21.213,8.787c7.678,0,15.355-2.929,21.213-8.787c11.716-11.716,11.716-30.71,0-42.426L208.271,8.788 c-11.715-11.717-30.711-11.717-42.426,0L81.144,93.489c-11.716,11.716-11.716,30.71,0,42.426 C92.859,147.631,111.855,147.631,123.57,135.915z"></path>
                </g>
            </g>
        </svg>
    </button>

    </div>
}